#lang planet neil/sicp
(define (entry tree) (car tree))
(define (left-branch tree) (cadr tree))
(define (right-branch tree) (caddr tree))
(define (get-key tree) (cadddr tree))
(define (make-tree entry left right key)
  (list entry left right key))
(define (look-up given-key set-of-records)
  (cond ((null? set-of-records) false)
        (else (let ((current (entry set-of-records)))
          (cond ((= current given-key) (get-key set-of-records))
                ((> current given-key) (look-up  given-key (left-branch set-of-records)))
                ((< current given-key) (look-up given-key (right-branch set-of-records)))
                )
          )
        )))