#lang planet neil/sicp
(define (average x y)(/ (+ x y) 2))
(define (make-point x y)
  (cons x y))
(define (x-point x)
  (car x))
(define (y-point y)
  (cdr y))
(define (make-segment point1 point2)
  (cons point1 point2))
(define (start-segment point)
  (car point))
(define (end-segment point)
  (cdr point))
(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")")
  )
(define (midpoint-segment x)
  (make-point (average (x-point (start-segment x)) (x-point (end-segment x)))
              (average (y-point (start-segment x)) (y-point (end-segment x)))
              ))
;(print-point (midpoint-segment (make-segment (make-point 0 0) (make-point 10 5))))
(define (rectangle p1 p2)
  (cons p1 p2))
(define (distance direction order x)
  (order (direction (start-segment x)) (direction (end-segment x)))
  )
(define (circumference r)
  (+ (* 2 (distance x-point - r)) (* 2 (distance y-point - r))))
(define (area r)
  (* (distance x-point - r) (distance y-point - r)))
;;第二种
(define (rectangleX w h)
  (cons (make-point 0 0) (make-point (+ w 0) (+ 0 h))))
